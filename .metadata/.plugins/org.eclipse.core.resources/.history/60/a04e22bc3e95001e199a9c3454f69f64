package orishop.DAO;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;

import orishop.models.*;

public class EmployeeDAOImp implements IEmployeeDAO{
	
	Connection conn = null;
	PreparedStatement ps = null;
	ResultSet rs = null;
	
	public List<EmployeeModels> findAll() {
		List<EmployeeModels> listEmp = new ArrayList<EmployeeModels>();
		String sql = "SELECT * FROM Employee";
		try {
			conn = DBConnectionSQLServer.getConnectionW();
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while (rs.next()) {
                EmployeeModels employee = new EmployeeModels();
                employee.setEmployeeId(rs.getInt("employeeId"));
                employee.setEmployeeName(rs.getString("employeeName"));
                employee.setBirthdate(rs.getDate("birthdate"));
                employee.setGender(rs.getString("gender"));
                employee.setAddress(rs.getString("address"));
                employee.setPhone(rs.getString("phone"));
                employee.setMail(rs.getString("mail"));
                employee.setJob(rs.getString("job"));
                employee.setAccountId(rs.getInt("accountId"));
                employee.setActivityArea(rs.getString("activityArea"));
                employee.setImageURL(rs.getString("imageURL"));

                // Thêm đối tượng Employee vào danh sách
                listEmp.add(employee);
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return listEmp;
	}

	@Override
	public List<EmployeeModels> findAllShipper() {
		List<EmployeeModels> listEmp = new ArrayList<EmployeeModels>();
		String sql = "SELECT * FROM Employee where job='Shipper'";
		try {
			conn = DBConnectionSQLServer.getConnectionW();
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while (rs.next()) {
                EmployeeModels employee = new EmployeeModels();
                employee.setEmployeeId(rs.getInt("employeeId"));
                employee.setEmployeeName(rs.getString("employeeName"));
                employee.setBirthdate(rs.getDate("birthdate"));
                employee.setGender(rs.getString("gender"));
                employee.setAddress(rs.getString("address"));
                employee.setPhone(rs.getString("phone"));
                employee.setMail(rs.getString("mail"));
                employee.setJob(rs.getString("job"));
                employee.setAccountId(rs.getInt("accountId"));
                employee.setActivityArea(rs.getString("activityArea"));
                employee.setImageURL(rs.getString("imageURL"));

                // Thêm đối tượng Employee vào danh sách
                listEmp.add(employee);
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return listEmp;
	}

	@Override
	public List<EmployeeModels> findAllSeller() {
		List<EmployeeModels> listEmp = new ArrayList<EmployeeModels>();
		String sql = "SELECT * FROM Employee where job='Seller'";
		try {
			conn = DBConnectionSQLServer.getConnectionW();
			ps = conn.prepareStatement(sql);
			rs = ps.executeQuery();
			while (rs.next()) {
                EmployeeModels employee = new EmployeeModels();
                employee.setEmployeeId(rs.getInt("employeeId"));
                employee.setEmployeeName(rs.getString("employeeName"));
                employee.setBirthdate(rs.getDate("birthdate"));
                employee.setGender(rs.getString("gender"));
                employee.setAddress(rs.getString("address"));
                employee.setPhone(rs.getString("phone"));
                employee.setMail(rs.getString("mail"));
                employee.setJob(rs.getString("job"));
                employee.setAccountId(rs.getInt("accountId"));
                employee.setActivityArea(rs.getString("activityArea"));
                employee.setImageURL(rs.getString("imageURL"));

                // Thêm đối tượng Employee vào danh sách
                listEmp.add(employee);
			}
		}catch (Exception e){
			e.printStackTrace();
		}
		return listEmp;
	}

}
